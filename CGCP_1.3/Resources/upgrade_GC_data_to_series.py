import os
from collections import OrderedDict
import pandas as pd
import shutil


folders = []
filenames = OrderedDict()

folder_path = r'C:\Users\annawi\Desktop\Projects\Propene oxidation\Experiments\201905_PdAufoams\GC product analysis\ANNA_POR 2019-05-27 21-01-34'
filename_add = ""

#this should be able to go through the subfolders of a folder and in each of these folders create 2 empty CSV files: 
#REPORT01.CSV and REPORT02.CSV  
#need to generate a REPORT00.CSV with all the lines included as in another one -> use one that was generated by the siftware, 
#read that in and replace the relevant fields (sample name and description) with data from the first lines of report00.txt


def create_csv_files(folder_path):
    print("Create CSV file function loaded.")
    subfolder_list = []
    for root, subfolders, files in os.walk(folder_path):
        #this is a complete mess, so lets better create a dictionary that has the initial subfolders as key and a list of
        #the files as values. then we can iterate through that and that should work if the root is a folder containing folders
        #that contain the data)
        subfolder_list.append(subfolders)
    folders_dict = {}
    for folder in subfolder_list[0]:
        for root, subfolders, files in os.walk(os.path.join(folder_path, folder)):
            folders_dict[folder] = files
            break #this is to not enter into the subfolders but actually add the files in the original folder!!
    print(folders_dict)

    for folder in folders_dict.keys():
        if not ".D" in folder:
            continue
        if "Report00.CSV" and "REPORT01.CSV" and "REPORT02.CSV" in folders_dict[folder]:
            continue
        else:
            print("adding CSV in " + folder)
            #read relevant data from the txt file
            path_txt = os.path.join(folder_path, folder, "Report.TXT")
            with open(path_txt, encoding='UTF16') as f:
                lines = []
                for line in f:
                    if "Data File" in line:
                        # print("Data file line found")
                        data_file = line[line.find("File")+5:-1]
                        print(data_file)
                    if "Sample Name" in line:
                        sample_name = line[line.find("Name")+6:-1]
                        print(sample_name)
                    if "Sample Info" in line:
                        sample_info = line[line.find("Info")+11:-1]
                        print(sample_info)
        #import template for report00.csv structure
        report_frame = pd.read_csv(r"C:\Users\annawi\PycharmProjects\CGCP_1.3\CGCP_1.3\Report00_template.csv", sep=',', names=["1"])
        report_frame[["1","2","3","4"]]=report_frame["1"].str.split(",", expand=True)
        # print(report_frame["2"])
        #replace relevant lines with new data from txt file
        report_frame["2"][0] = "\'" + str(sample_name) + "\'"
        report_frame["2"][1] = "\'" + str(sample_info) + "\'"
        report_frame["2"][2] = "\'" + str(data_file) + "\'"
        report_frame["2"][9] = str(report_frame["2"][9]) + " " + str(report_frame["3"][9])
        report_frame["2"][10] = str(report_frame["2"][10]) + " " + str(report_frame["3"][10])
        report_frame["3"][9] = ""
        report_frame["3"][10] = ""

        # print(report_frame["2"])
        #save as csv
        report_frame[["1", "2", "3"]].to_csv(os.path.join(folder_path, folder, "Report00.CSV", ), sep=',', na_rep='', index=False, header=False, encoding='UTF-16LE')
        empty_frame = pd.DataFrame()
        print(empty_frame)
        empty_frame.to_csv(os.path.join(folder_path, folder, "REPORT01.CSV"), sep=',', na_rep='', index=False,
                            header=False)
        empty_frame.to_csv(os.path.join(folder_path, folder, "REPORT02.CSV"), sep=',', na_rep='', index=False,
                           header=False)
        print("CSV files created for sample folder " + str(folder))


if True:
    create_csv_files(folder_path)